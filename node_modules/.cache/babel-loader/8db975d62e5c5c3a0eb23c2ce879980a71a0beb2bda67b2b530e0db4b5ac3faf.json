{"ast":null,"code":"var _jsxFileName = \"/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from './apiService';\nimport { Link } from 'react-router-dom';\nimport { Typography, Grid, Card, CardContent, CardMedia, Pagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const postsPerPage = 20;\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetchData();\n        setPosts(response.results);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n  const renderPosts = () => {\n    const startIndex = (page - 1) * postsPerPage;\n    const endIndex = startIndex + postsPerPage;\n    const currentPosts = posts.slice(startIndex, endIndex);\n    return currentPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/post/${startIndex + index + 1}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              style: {\n                width: '50%',\n                height: 'auto'\n              },\n              image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${getPokemonId(post.url)}.svg`,\n              alt: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              children: post.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this));\n  };\n  const getPokemonId = url => {\n    const parts = url.split('/');\n    return parseInt(parts[parts.length - 2], 10);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      gutterBottom: true,\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: Math.ceil(posts.length / postsPerPage),\n      page: page,\n      onChange: handlePageChange,\n      variant: \"outlined\",\n      shape: \"rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(PostsPage, \"S+lycjOwIZhAbG4fwTPtDkTcJ2Q=\");\n_c = PostsPage;\nexport default PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["React","useState","useEffect","fetchData","Link","Typography","Grid","Card","CardContent","CardMedia","Pagination","jsxDEV","_jsxDEV","PostsPage","_s","posts","setPosts","page","setPage","postsPerPage","fetchPosts","response","results","error","console","handlePageChange","event","value","renderPosts","startIndex","endIndex","currentPosts","slice","map","post","index","item","xs","sm","md","lg","children","to","style","textDecoration","height","display","flexDirection","justifyContent","alignItems","component","width","image","getPokemonId","url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","parts","split","parseInt","length","gutterBottom","container","spacing","count","Math","ceil","onChange","shape","_c","$RefreshReg$"],"sources":["/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchData } from './apiService';\nimport { Link } from 'react-router-dom';\nimport { Typography, Grid, Card, CardContent, CardMedia, List, ListItem, ListItemText, Pagination } from '@mui/material';\n\nconst PostsPage: React.FC = () => {\n    const [posts, setPosts] = useState<any[]>([]);\n    const [page, setPage] = useState<number>(1);\n    const postsPerPage = 20;\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await fetchData();\n                setPosts(response.results);\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n\n    \n\n    const renderPosts = () => {\n        const startIndex = (page - 1) * postsPerPage;\n        const endIndex = startIndex + postsPerPage;\n        const currentPosts = posts.slice(startIndex, endIndex);\n\n        return currentPosts.map((post, index) => (\n            <Grid item key={index} xs={12} sm={6} md={4} lg={3}>\n                <Link to={`/post/${startIndex + index + 1}`} style={{ textDecoration: 'none' }}>\n                    <Card style={{ height: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n                            <CardMedia\n                                component=\"img\"\n                                style={{ width: '50%', height: 'auto' }}\n                                image={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${getPokemonId(post.url)}.svg`}\n                                alt={post.name}\n                            />\n                        </div>\n                        <CardContent>\n                            <Typography variant=\"body1\" component=\"p\">\n                                {post.name}\n                                \n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Link>\n            </Grid>\n\n\n        ));\n    };\n\n    const getPokemonId = (url: string) => {\n        const parts = url.split('/');\n        return parseInt(parts[parts.length - 2], 10);\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h2\" gutterBottom>Posts</Typography>\n            <Grid container spacing={3}>\n                {renderPosts()}\n            </Grid>\n            <Pagination\n                count={Math.ceil(posts.length / postsPerPage)}\n                page={page}\n                onChange={handlePageChange}\n                variant=\"outlined\"\n                shape=\"rounded\"\n            />\n        </div>\n    );\n};\n\nexport default PostsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}