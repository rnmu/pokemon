{"ast":null,"code":"var _jsxFileName = \"/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostDetailsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, CircularProgress, Grid, Box, ListItem, ListItemText, List } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image = styled('img')({\n  maxWidth: '100%',\n  // Limit the image width to its container\n  maxHeight: '100%',\n  // Limit the image height to its container\n  // borderRadius: '50%',\n  margin: 'auto',\n  display: 'block',\n  transition: 'transform 0.3s ease-in-out',\n  // Add transition for smooth animation\n  position: 'relative',\n  top: '50%',\n  transform: 'translateY(-50%)' // Center the image vertically\n});\n_c = Image;\nconst CenteredBox = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  height: '100%'\n});\n_c2 = CenteredBox;\nconst PostDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pokemonDetails, setPokemonDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n        const data = await response.json();\n        setPokemonDetails(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Pokémon details:', error);\n        setLoading(false);\n      }\n    };\n    fetchPokemonDetails();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  if (!pokemonDetails) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Pok\\xE9mon not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    name,\n    types,\n    stats\n  } = pokemonDetails;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(CenteredBox, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Pok\\xE9mon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Name: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Type: \", types.map(type => type.type.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Stats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: stats.map(stat => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${stat.stat.name}: ${stat.base_stat}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, stat.stat.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`,\n        alt: name,\n        style: {\n          position: 'relative',\n          top: '50%',\n          transform: 'translateY(-50%)'\n        } // Center the image vertically\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetailsPage, \"9EhdLIDzeq3bruWAt1cEG/tMjHE=\", false, function () {\n  return [useParams];\n});\n_c3 = PostDetailsPage;\nexport default PostDetailsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Image\");\n$RefreshReg$(_c2, \"CenteredBox\");\n$RefreshReg$(_c3, \"PostDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Typography","CircularProgress","Grid","Box","ListItem","ListItemText","List","styled","jsxDEV","_jsxDEV","Image","maxWidth","maxHeight","margin","display","transition","position","top","transform","_c","CenteredBox","flexDirection","justifyContent","height","_c2","PostDetailsPage","_s","id","pokemonDetails","setPokemonDetails","loading","setLoading","fetchPokemonDetails","response","fetch","data","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","name","types","stats","container","spacing","item","xs","sm","map","type","join","stat","primary","base_stat","src","alt","style","_c3","$RefreshReg$"],"sources":["/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostDetailsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, CircularProgress, Grid, Box, ListItem, ListItemText, List } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Image = styled('img')({\n    maxWidth: '100%', // Limit the image width to its container\n    maxHeight: '100%', // Limit the image height to its container\n    // borderRadius: '50%',\n    margin: 'auto',\n    display: 'block',\n    transition: 'transform 0.3s ease-in-out', // Add transition for smooth animation\n    position: 'relative',\n    top: '50%',\n    transform: 'translateY(-50%)', // Center the image vertically\n});\n\nconst CenteredBox = styled(Box)({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n});\n\nconst PostDetailsPage: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [pokemonDetails, setPokemonDetails] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const fetchPokemonDetails = async () => {\n            try {\n                const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n                const data = await response.json();\n                setPokemonDetails(data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching Pokémon details:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchPokemonDetails();\n    }, [id]);\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    if (!pokemonDetails) {\n        return <Typography variant=\"body1\">Pokémon not found</Typography>;\n    }\n\n    const { name, types, stats } = pokemonDetails;\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n                <CenteredBox>\n                    <Typography variant=\"h3\">Pokémon Details</Typography>\n                    <Typography variant=\"body1\">ID: {id}</Typography>\n                    <Typography variant=\"body1\">Name: {name}</Typography>\n                    <Typography variant=\"body1\">Type: {types.map((type: any) => type.type.name).join(', ')}</Typography>\n                    <Typography variant=\"body1\">Stats:</Typography>\n                    <List>\n                        {stats.map((stat: any) => (\n                            <ListItem key={stat.stat.name}>\n                                <ListItemText primary={`${stat.stat.name}: ${stat.base_stat}`} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    {/* Preview of evolution can be added here */}\n                </CenteredBox>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Image\n                    src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`}\n                    alt={name}\n                    style={{ position: 'relative', top: '50%', transform: 'translateY(-50%)' }} // Center the image vertically\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PostDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}