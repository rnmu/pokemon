{"ast":null,"code":"var _jsxFileName = \"/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostDetailsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, CircularProgress, Grid, Box, ListItem, ListItemText, List } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = styled(Grid)({\n  backgroundColor: '#f0f0f0',\n  // Default background color\n  // Conditionally change background color based on the Pokémon type\n  backgroundImage: props => {\n    if (props.type === 'fire') {\n      return 'url(\"https://yourfireimageurl.com\")'; // Replace with the URL of your fire background image\n    } else {\n      return 'none';\n    }\n  },\n  backgroundSize: 'cover',\n  backgroundPosition: 'center'\n});\n_c = StyledGrid;\nconst Image = styled('img')({\n  maxWidth: '100%',\n  // Limit the image width to its container\n  maxHeight: '100%',\n  // Limit the image height to its container\n  borderRadius: '50%',\n  margin: 'auto',\n  display: 'block',\n  position: 'relative',\n  zIndex: 1 // Ensure the image stays above the background\n});\n_c2 = Image;\nconst PostDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pokemonDetails, setPokemonDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      try {\n        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n        const data = await response.json();\n        setPokemonDetails(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching Pokémon details:', error);\n        setLoading(false);\n      }\n    };\n    fetchPokemonDetails();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  if (!pokemonDetails) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Pok\\xE9mon not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    name,\n    types,\n    sprites,\n    stats\n  } = pokemonDetails;\n  const pokemonType = types[0].type.name; // Assuming the Pokémon has only one type\n\n  return /*#__PURE__*/_jsxDEV(StyledGrid, {\n    container: true,\n    spacing: 2,\n    type: pokemonType,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Pok\\xE9mon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Name: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Type: \", pokemonType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Stats:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: stats.map(stat => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${stat.stat.name}: ${stat.base_stat}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, stat.stat.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: sprites.front_default,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetailsPage, \"9EhdLIDzeq3bruWAt1cEG/tMjHE=\", false, function () {\n  return [useParams];\n});\n_c3 = PostDetailsPage;\nexport default PostDetailsPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledGrid\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"PostDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Typography","CircularProgress","Grid","Box","ListItem","ListItemText","List","styled","jsxDEV","_jsxDEV","StyledGrid","backgroundColor","backgroundImage","props","type","backgroundSize","backgroundPosition","_c","Image","maxWidth","maxHeight","borderRadius","margin","display","position","zIndex","_c2","PostDetailsPage","_s","id","pokemonDetails","setPokemonDetails","loading","setLoading","fetchPokemonDetails","response","fetch","data","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","name","types","sprites","stats","pokemonType","container","spacing","item","xs","sm","textAlign","map","stat","primary","base_stat","src","front_default","alt","_c3","$RefreshReg$"],"sources":["/Users/gutech/Downloads/rayanpokemon-main/pokemonapp/src/PostDetailsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, CircularProgress, Grid, Box, ListItem, ListItemText, List } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledGrid = styled(Grid)({\n    backgroundColor: '#f0f0f0', // Default background color\n    // Conditionally change background color based on the Pokémon type\n    backgroundImage: props => {\n        if (props.type === 'fire') {\n            return 'url(\"https://yourfireimageurl.com\")'; // Replace with the URL of your fire background image\n        } else {\n            return 'none';\n        }\n    },\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n});\n\nconst Image = styled('img')({\n    maxWidth: '100%', // Limit the image width to its container\n    maxHeight: '100%', // Limit the image height to its container\n    borderRadius: '50%',\n    margin: 'auto',\n    display: 'block',\n    position: 'relative',\n    zIndex: 1, // Ensure the image stays above the background\n});\n\nconst PostDetailsPage: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [pokemonDetails, setPokemonDetails] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const fetchPokemonDetails = async () => {\n            try {\n                const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n                const data = await response.json();\n                setPokemonDetails(data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching Pokémon details:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchPokemonDetails();\n    }, [id]);\n\n    if (loading) {\n        return <CircularProgress />;\n    }\n\n    if (!pokemonDetails) {\n        return <Typography variant=\"body1\">Pokémon not found</Typography>;\n    }\n\n    const { name, types, sprites, stats } = pokemonDetails;\n    const pokemonType = types[0].type.name; // Assuming the Pokémon has only one type\n\n    return (\n        <StyledGrid container spacing={2} type={pokemonType}>\n            <Grid item xs={12} sm={6}>\n                <Box textAlign=\"left\">\n                    <Typography variant=\"h3\">Pokémon Details</Typography>\n                    <Typography variant=\"body1\">ID: {id}</Typography>\n                    <Typography variant=\"body1\">Name: {name}</Typography>\n                    <Typography variant=\"body1\">Type: {pokemonType}</Typography>\n                    <Typography variant=\"body1\">Stats:</Typography>\n                    <List>\n                        {stats.map((stat: any) => (\n                            <ListItem key={stat.stat.name}>\n                                <ListItemText primary={`${stat.stat.name}: ${stat.base_stat}`} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    {/* Preview of evolution can be added here */}\n                </Box>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Image src={sprites.front_default} alt={name} />\n            </Grid>\n        </StyledGrid>\n    );\n};\n\nexport default PostDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}